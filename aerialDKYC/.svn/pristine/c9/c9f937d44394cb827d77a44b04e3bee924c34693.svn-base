package com.edios.pms.manager;

import java.util.List;

import com.edios.cdf.manager.AbstractManager;
import com.edios.cdf.util.PayloadBean;
import com.edios.cdf.util.TransactionFailedException;
import com.edios.pms.bean.InventoryCountBean;
import com.edios.pms.bean.InventoryCountItemsBean;
import com.edios.pms.entity.to.PhysicalCountEntityTo;

public interface CycleCountManager extends AbstractManager {

	PhysicalCountEntityTo fetchPhysicalCountItemsAndLocation(PayloadBean payloadBean);

	Long addCycleCount(InventoryCountBean inventoryCountBean);

	List<PhysicalCountEntityTo> fetchCycleCountItems(PhysicalCountEntityTo physicalCountEntityTo);

	String updateCycleCount(InventoryCountItemsBean inventoryCountItemsBean);

	String updateAllCycleCountItems(InventoryCountBean inventoryCountBean) throws TransactionFailedException;

	List<PhysicalCountEntityTo> fetchStockItems(PhysicalCountEntityTo physicalCountEntityTo);

	String updateInventoryItemAndAddMismatchItem(InventoryCountItemsBean inventoryCountItemsBean);

	List<PhysicalCountEntityTo> fetchStockItemsOnEdit(PhysicalCountEntityTo physicalCountEntityTo);

	List<PhysicalCountEntityTo> searchCycleCount(PayloadBean payloadBean);

	InventoryCountBean searchCycleCountById(PayloadBean payloadBean);

	String updateInvCycleCount(InventoryCountBean inventoryCountBean);

	String finalizeCycleCount(InventoryCountBean inventoryCountBean);

	InventoryCountBean fetchCycleCount(PayloadBean payloadBean);

	List<PhysicalCountEntityTo> fetchFinalizedCycleCountItems(PhysicalCountEntityTo physicalCountEntityTo);

	Long checkPendingItems(PayloadBean payloadBean);





}
