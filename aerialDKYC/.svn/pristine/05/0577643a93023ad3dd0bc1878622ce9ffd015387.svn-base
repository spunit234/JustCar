package com.edios.pms.controller;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.List;

import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RestController;

import com.edios.cdf.util.PayloadBean;
import com.edios.pms.entity.to.GeneralLedgerTo;
import com.edios.pms.entity.to.PhysicalCountEntityTo;
import com.edios.pms.manager.ExportNonDashBoardReportManager;
import com.edios.pms.manager.GeneralLedgerManager;

import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;

@RestController
public class ExportNonDashBoardReports {

	
	@Autowired
	ExportNonDashBoardReportManager exportNonDashBoardReportManager;
	
	@Autowired
	GeneralLedgerManager generalLedgerManager;

	@GetMapping("/export_physical_count_report/{payloadDetails}")
	public void exportPhysicalCount(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse,
	@PathVariable("payloadDetails") String payloadDetails) {
	try {
		String[] details = payloadDetails.split(",", -1);
		PayloadBean payloadBean= new PayloadBean();
		payloadBean.setCustomParameter(details[2]);
		payloadBean.setId(Long.parseLong(details[3]));
		SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
		if (details[1]!=null ) {	 
			 payloadBean.setFromDate(formatter.parse(details[0]));	
		}
		if (details[2]!=null ) {
			 payloadBean.setToDate(formatter.parse(details[1]));
		}
		
		List<PhysicalCountEntityTo> physicalCountList = null;
		physicalCountList = exportNonDashBoardReportManager.fetchPhysicalCountDetails(payloadBean);
	
		if (physicalCountList.size()>0) {
			DateFormat dateFormat = new SimpleDateFormat("dd-MMMM-yyyy");  
			String dateRange="From Date: "+dateFormat.format(payloadBean.getFromDate())+" & To Date: "+dateFormat.format(payloadBean.getToDate())+"";
			physicalCountList.get(0).setDateRange(dateRange);
		}
		
		HashMap<String, Object> parametersPDF = new HashMap<String, Object>();
		JasperPrint jasperPrint = null;
		JRBeanCollectionDataSource beanCollectionDataSource = null;
		beanCollectionDataSource = new JRBeanCollectionDataSource(physicalCountList);
		String reportPath = httpServletRequest.getServletContext().getRealPath("//WEB-INF//JasperReports//PhysicalCount.jasper");
		jasperPrint = JasperFillManager.fillReport(reportPath, parametersPDF, beanCollectionDataSource);
		httpServletResponse.addHeader("Content-disposition","attachment; filename=PhysicalCount.pdf");
		ServletOutputStream servletOutputStream = httpServletResponse.getOutputStream();	
		JasperExportManager.exportReportToPdfStream(jasperPrint, servletOutputStream);
	}
	catch(Exception e) {
	e.printStackTrace();
	}
	}
	
	@GetMapping("/export_cycle_count_report/{payloadDetails}")
	public void exportCycleCount(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse,
	@PathVariable("payloadDetails") String payloadDetails) {
	try {
		String[] details = payloadDetails.split(",", -1);
		PayloadBean payloadBean= new PayloadBean();
		payloadBean.setCustomParameter(details[2]);
		payloadBean.setId(Long.parseLong(details[3]));
		payloadBean.setItemClass(details[4]);
		SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
		if (details[1]!=null ) {	 
			 payloadBean.setFromDate(formatter.parse(details[0]));	
		}
		if (details[2]!=null ) {
			 payloadBean.setToDate(formatter.parse(details[1]));
		}
		
		List<PhysicalCountEntityTo> physicalCountList = null;
		physicalCountList = exportNonDashBoardReportManager.fetchCycleCountDetails(payloadBean);
	
		if (physicalCountList.size()>0) {
			DateFormat dateFormat = new SimpleDateFormat("dd-MMMM-yyyy");  
			String dateRange="From Date: "+dateFormat.format(payloadBean.getFromDate())+" & To Date: "+dateFormat.format(payloadBean.getToDate())+"";
			physicalCountList.get(0).setDateRange(dateRange);
		}
		
		HashMap<String, Object> parametersPDF = new HashMap<String, Object>();
		JasperPrint jasperPrint = null;
		JRBeanCollectionDataSource beanCollectionDataSource = null;
		beanCollectionDataSource = new JRBeanCollectionDataSource(physicalCountList);
		String reportPath = httpServletRequest.getServletContext().getRealPath("//WEB-INF//JasperReports//CycleCount.jasper");
		jasperPrint = JasperFillManager.fillReport(reportPath, parametersPDF, beanCollectionDataSource);
		httpServletResponse.addHeader("Content-disposition","attachment; filename=CycleCount.pdf");
		ServletOutputStream servletOutputStream = httpServletResponse.getOutputStream();	
		JasperExportManager.exportReportToPdfStream(jasperPrint, servletOutputStream);
	}
	catch(Exception e) {
	e.printStackTrace();
	}
	}
	
	
	@GetMapping("/export_general_ladgers_report/{payloadDetails}")
	public void exportGeneralLefgerReport(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse,
	@PathVariable("payloadDetails") String payloadDetails) {
	try {
		String[] details = payloadDetails.split(",", -1);
		PayloadBean payloadBean= new PayloadBean();
		payloadBean.setItemName(details[0]);
		
		SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
		if (details[1]!=null ) {	 
			 payloadBean.setFromDate(formatter.parse(details[1]));	
		}
		if (details[2]!=null ) {
			 payloadBean.setToDate(formatter.parse(details[2]));
		}
		
		List<GeneralLedgerTo> generalLedgerToList = null;
		generalLedgerToList = generalLedgerManager.getGeneralLedgerReport(payloadBean);
	
		if (generalLedgerToList.size()>0) {
			DateFormat dateFormat = new SimpleDateFormat("dd-MMMM-yyyy");  
			String dateRange="From Date: "+dateFormat.format(payloadBean.getFromDate())+" & To Date: "+dateFormat.format(payloadBean.getToDate())+"";
			generalLedgerToList.get(0).setDateRange(dateRange);
			generalLedgerToList.get(0).setItemNameReport(details[0]);
		}
		
		HashMap<String, Object> parametersPDF = new HashMap<String, Object>();
		JasperPrint jasperPrint = null;
		JRBeanCollectionDataSource beanCollectionDataSource = null;
		beanCollectionDataSource = new JRBeanCollectionDataSource(generalLedgerToList);
		String reportPath = httpServletRequest.getServletContext().getRealPath("//WEB-INF//JasperReports//GeneralLedger.jasper");
		jasperPrint = JasperFillManager.fillReport(reportPath, parametersPDF, beanCollectionDataSource);
		httpServletResponse.addHeader("Content-disposition","attachment; filename=GeneralLedger.pdf");
		ServletOutputStream servletOutputStream = httpServletResponse.getOutputStream();	
		JasperExportManager.exportReportToPdfStream(jasperPrint, servletOutputStream);
	}
	catch(Exception e) {
	e.printStackTrace();
	}
	}
	
	
}
