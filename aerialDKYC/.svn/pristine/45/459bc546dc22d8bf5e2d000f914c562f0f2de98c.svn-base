package com.edios.pms.entity;

import java.io.Serializable;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.edios.cdf.entity.AbstractEntity;

import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;


/**
 * The persistent class for the item_orders database table.
 * 
 */
@Entity
@Table(name="item_orders")
@Setter
@Getter
@NoArgsConstructor
public class ItemOrderEntity extends AbstractEntity implements Serializable  {
	private static final long serialVersionUID = 1L;

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name="ITEM_ORDER_ID")
	private Long itemOrderId;

	@Column(name="CREATED_BY")
	private Long createdBy;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="CREATED_DATE")
	private Date createdDate;

	@Column(name="INDENT_NO")
	private String indentNo;

	@Column(name="IP_ADDRESS")
	private String ipAddress;

	@Column(name="LAST_MODIFIED_BY")
	private Long lastModifiedBy;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="LAST_MODIFIED_DATE")
	private Date lastModifiedDate;

	private String notes;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="ORDER_DATE")
	private Date orderDate;

	@Column(name="ORDER_PLACE")
	private String orderPlace;

	@Column(name="ORDER_STATUS")
	private String orderStatus;

	@Column(name="RECORD_TYPE")
	private Character recordType;

	@Column(name="TRANSACTION_COUNT")
	private Long transactionCount;

	@Column(name="USER_ACTIVITY_ID")
	private Long userActivityId;

	
	@ManyToOne
	@JoinColumn(name="OF_PHARMACY_LOCATION_ID")
	private PharmacyLocationEntity ofPharmacyLocation;

	//bi-directional many-to-one association to PharmacyLocation
	@ManyToOne
	@JoinColumn(name="OT_PHARMACY_LOCATION_ID")
	private PharmacyLocationEntity otPharmacyLocation;

	//bi-directional many-to-one association to PharmacyStore
	@ManyToOne
	@JoinColumn(name="OT_PHARMACY_STORE_ID")
	private PharmacyStoreEntity otPharmacyStore;
	
	
	//bi-directional many-to-one association to ItemOrderDetail
	@OneToMany(mappedBy="itemOrder")
	private List<ItemOrderDetailEntity> itemOrderDetails;
	
	
	@Column(name="order_type")
	private String orderType;

	

}